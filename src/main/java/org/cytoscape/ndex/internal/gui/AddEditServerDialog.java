/*
 * Copyright (c) 2014, the Cytoscape Consortium and the Regents of the University of California
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package org.cytoscape.ndex.internal.gui;

import javax.swing.JOptionPane;
import org.cytoscape.ndex.internal.strings.ErrorMessage;
import org.cytoscape.ndex.internal.server.Server;
import org.cytoscape.ndex.internal.server.ServerList;
import org.cytoscape.ndex.internal.singletons.ServerManager;

import java.awt.*;

/**
 *
 * @author David
 */
public class AddEditServerDialog extends javax.swing.JDialog {

    public enum Mode {ADD, EDIT};
    private Mode mode = null;
    private final ChangeNdexServerDialog parent;
    
    /**
     * Creates new form AddNDExServer
     */
    public AddEditServerDialog(ChangeNdexServerDialog parent) {
        super(parent, true);
        this.parent = parent;
        initComponents();
        prepComponents();
    }
    
    /**
     * This method should be called when the mode is set to EDIT so that
     * existing server data may be modified.
     */
    private void populateFieldsWithSelectedServer()
    {
        Server selectedServer = ServerManager.INSTANCE.getSelectedServer();
        
        class ServerInfo
        {
            String name, url, username, password;
            ServerInfo(Server server)
            {
                name = server.getName();
                url = server.getUrl();
                username = server.getUsername();
                password = server.getPassword();
                assert( name != null );  
                assert( url != null );
                if( username == null )
                    username = "";
                if( url == null )
                    url = "";
             }
        }
        ServerInfo si = new ServerInfo(selectedServer);
               
        name.setText(si.name);
        url.setText(si.url);
        username.setText(si.username);
        password.setText(si.password);
    }
    
    private void prepComponents()
    {
        getRootPane().setDefaultButton(save);    
    }
    
    public void setMode(Mode mode)
    {
        this.mode = mode;
        updateTitle();
        if( mode == Mode.EDIT )
        {
            populateFieldsWithSelectedServer();
            //If the selected server is a default server, do not allow the user to change the name or URL.
            if( ServerManager.INSTANCE.getSelectedServer().getType() == Server.Type.DEFAULT )
            {
                name.setEditable(false);
                url.setEditable(false);
                username.requestFocus();
            }
        }
    }
    
    private void updateTitle()
    {
        if( mode == Mode.ADD )
            setTitle("Add Server");
        else
            setTitle("Edit Server");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jSplitPane1 = new javax.swing.JSplitPane();
        jTextField9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        url = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();

        jTextField9.setText("jTextField9");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Server");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("NDEx Source");

        url.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                urlActionPerformed(evt);
            }
        });

        jLabel3.setText("Name:");

        jLabel4.setText("URL:");

        jLabel5.setText("Username:");

        jLabel6.setText("Password:");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name)
                            .addComponent(url)
                            .addComponent(username)
                            .addComponent(password)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 221, Short.MAX_VALUE)
                        .addComponent(cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(cancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urlActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_urlActionPerformed
    {//GEN-HEADEREND:event_urlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_urlActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveActionPerformed
    {//GEN-HEADEREND:event_saveActionPerformed
        ServerList servers = ServerManager.INSTANCE.getAvailableServers();
        if( mode == Mode.ADD )
        {
            Server server = new Server();
            server.setName( name.getText().trim() );
            server.setUrl( url.getText().trim() );
            server.setUsername( username.getText().trim() );
            server.setPassword( password.getText().trim() );
            server.setType(Server.Type.ADDED);  
            
            try
            {
                servers.add(server);
                servers.save();
                ServerManager.INSTANCE.setSelectedServer(server);
                parent.setSelectedServer(server);
                setVisible(false);
            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(this,
                    ex.getMessage(),
                    "Error Adding Server",
                    JOptionPane.ERROR_MESSAGE);
            }     
        }
        if( mode == Mode.EDIT )
        {
            ServerManager m = ServerManager.INSTANCE;
            Server server = m.getSelectedServer();
            String newName = name.getText().trim();
            //In English: If the name is being changed to the name of another server.
            if( !server.getName().equals(newName) && servers.isNameUsed(newName) )
            {
                //Then: That is an error.
                JOptionPane.showMessageDialog(this,
                    ErrorMessage.serverNameAlreadyUsed,
                    "Error Editing Server",
                    JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                server.setName( newName );
                server.setUrl( url.getText().trim() );
                server.setUsername( username.getText().trim() );
                server.setPassword( password.getText().trim() );
                //Inform the server list of the edit.
                servers.edited(server);
                if( server.isDefault() )
                {
                    servers.registerDefaultServerCredentials(server);
                }
                servers.save();
                setVisible(false);
            }
            
        }
    }//GEN-LAST:event_saveActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelActionPerformed
    {//GEN-HEADEREND:event_cancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton save;
    private javax.swing.JTextField url;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
